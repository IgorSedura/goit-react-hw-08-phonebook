{"version":3,"file":"static/js/673.4d2f39f7.chunk.js","mappings":"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","sources":["components/RegisterForm/initialState.js","components/RegisterForm/registerForm.jsx","Pages/Register/RegisterPage.jsx","../node_modules/@chakra-ui/layout/dist/chunk-6CSUKJP7.mjs","../node_modules/@chakra-ui/layout/dist/chunk-MPFPK3CX.mjs","../node_modules/@chakra-ui/toast/dist/chunk-63BX7GVG.mjs"],"sourcesContent":["export const initialState = {\n  name: '',\n  email: '',\n  password: '',\n};\n","import {\n  Box,\n  Flex,\n  Heading,\n  FormControl,\n  FormLabel,\n  Input,\n  Button,\n  InputGroup,\n  InputRightElement,\n} from '@chakra-ui/react';\nimport { initialState } from './initialState';\nimport { useState } from 'react';\n\nconst LoginHeader = () => {\n  return (\n    <Box textAlign=\"center\">\n      <Heading> Register Form</Heading>\n    </Box>\n  );\n};\n\nconst RegisterForm = ({ onSubmit }) => {\n  const [show, setShow] = useState(false);\n  const handleClick = () => setShow(!show);\n  const [state, setState] = useState({ ...initialState });\n  const handleChange = ({ target }) => {\n    const { value, name } = target;\n    setState(prevState => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n  const { name, email, password } = state;\n\n  return (\n    <Flex\n      alignItems=\"flex-start\"\n      minHeight=\"85vh\"\n      width=\"full\"\n      align=\"center\"\n      justifyContent=\"center\"\n    >\n      <Box\n        borderWidth={1}\n        px={4}\n        width=\"full\"\n        maxWidth=\"500px\"\n        borderRadius={4}\n        textAlign=\"center\"\n        boxShadow=\"lg\"\n      >\n        <Box p={4}>\n          <LoginHeader />\n\n          <Box align=\"flex-start\" my={8} textAlign=\"left\">\n            <form onSubmit={handleSubmit}>\n              <FormControl>\n                <FormLabel>User name</FormLabel>\n                <Input\n                  onChange={handleChange}\n                  value={name}\n                  name=\"name\"\n                  type=\"text\"\n                  placeholder=\"Enter your name\"\n                  required\n                />\n              </FormControl>\n              <FormControl mt={4}>\n                <FormLabel>Email address</FormLabel>\n                <Input\n                  value={email}\n                  name=\"email\"\n                  id=\"email\"\n                  type=\"email\"\n                  placeholder=\"Enter your email address\"\n                  onChange={handleChange}\n                />\n              </FormControl>\n              <FormControl mt={4}>\n                <FormLabel>Password</FormLabel>\n                <InputGroup size=\"md\">\n                  <Input\n                    onChange={handleChange}\n                    name=\"password\"\n                    value={password}\n                    type={show ? 'text' : 'password'}\n                    placeholder=\"Enter your password\"\n                  />\n                  <InputRightElement width=\"4.5rem\">\n                    <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n                      {show ? 'Hide' : 'Show'}\n                    </Button>\n                  </InputRightElement>\n                </InputGroup>\n              </FormControl>\n\n              <Button type=\"submit\" colorScheme=\"teal\" width=\"full\" mt={4}>\n                Sign Up\n              </Button>\n            </form>\n          </Box>\n        </Box>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default RegisterForm;\n","import RegisterForm from 'components/RegisterForm/registerForm';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { singup } from 'redux/auth/auth-operations';\nimport { getAuthError } from 'redux/auth/auth-selector';\nimport { useToast } from '@chakra-ui/react';\n\nconst RegisterPage = () => {\n  const dispatch = useDispatch();\n  const { status, statusText } = useSelector(getAuthError);\n\n  const toast = useToast();\n  const Click = () => {\n    if (status) {\n      toast({\n        title: 'Oops',\n        description: `${statusText}`,\n        status: 'error',\n        duration: 9000,\n        position: 'top',\n        isClosable: true,\n      });\n    }\n  };\n\n  const onRegister = data => {\n    dispatch(singup(data));\n  };\n\n  return (\n    <div>\n      <RegisterForm onSubmit={onRegister} onClick={Click()} />\n    </div>\n  );\n};\n\nexport default RegisterPage;\n","// src/box.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Box = chakra(\"div\");\nBox.displayName = \"Box\";\nvar Square = forwardRef(function Square2(props, ref) {\n  const { size, centerContent = true, ...rest } = props;\n  const styles = centerContent ? { display: \"flex\", alignItems: \"center\", justifyContent: \"center\" } : {};\n  return /* @__PURE__ */ jsx(\n    Box,\n    {\n      ref,\n      boxSize: size,\n      __css: {\n        ...styles,\n        flexShrink: 0,\n        flexGrow: 0\n      },\n      ...rest\n    }\n  );\n});\nSquare.displayName = \"Square\";\nvar Circle = forwardRef(function Circle2(props, ref) {\n  const { size, ...rest } = props;\n  return /* @__PURE__ */ jsx(Square, { size, ref, borderRadius: \"9999px\", ...rest });\n});\nCircle.displayName = \"Circle\";\n\nexport {\n  Box,\n  Square,\n  Circle\n};\n","// src/flex.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Flex = forwardRef(function Flex2(props, ref) {\n  const { direction, align, justify, wrap, basis, grow, shrink, ...rest } = props;\n  const styles = {\n    display: \"flex\",\n    flexDirection: direction,\n    alignItems: align,\n    justifyContent: justify,\n    flexWrap: wrap,\n    flexBasis: basis,\n    flexGrow: grow,\n    flexShrink: shrink\n  };\n  return /* @__PURE__ */ jsx(chakra.div, { ref, __css: styles, ...rest });\n});\nFlex.displayName = \"Flex\";\n\nexport {\n  Flex\n};\n","import {\n  useToastOptionContext\n} from \"./chunk-LYK4NOBV.mjs\";\nimport {\n  createToastFn\n} from \"./chunk-JK5VQ4MW.mjs\";\n\n// src/use-toast.tsx\nimport { useChakra } from \"@chakra-ui/system\";\nimport { useMemo } from \"react\";\nfunction useToast(options) {\n  const { theme } = useChakra();\n  const defaultOptions = useToastOptionContext();\n  return useMemo(\n    () => createToastFn(theme.direction, {\n      ...defaultOptions,\n      ...options\n    }),\n    [options, theme.direction, defaultOptions]\n  );\n}\nvar use_toast_default = useToast;\n\nexport {\n  useToast,\n  use_toast_default\n};\n"],"names":["initialState","name","email","password","LoginHeader","textAlign","onSubmit","useState","show","setShow","state","setState","handleChange","target","value","prevState","alignItems","minHeight","width","align","justifyContent","borderWidth","px","maxWidth","borderRadius","boxShadow","p","my","e","preventDefault","I","onChange","type","placeholder","required","mt","id","size","h","onClick","colorScheme","dispatch","useDispatch","useSelector","getAuthError","status","statusText","toast","useToast","data","singup","title","description","duration","position","isClosable","Box","chakra","displayName","Square","forwardRef","props","ref","centerContent","rest","styles","display","jsx","boxSize","__css","flexShrink","flexGrow","Flex","direction","justify","wrap","basis","grow","shrink","flexDirection","flexWrap","flexBasis","options","theme","useChakra","defaultOptions","useToastOptionContext","useMemo","createToastFn"],"sourceRoot":""}